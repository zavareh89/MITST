import re

import numpy as np


def drug_dosage_calc(
    row,
    dosage_pattern,
    fill_nan=False,
    fill_pattern=None,
):
    """
    row: The row of the medication DataFrame.
    dosage_pattern: dosage pattern used to extract the dosage value
    fill_nan: If true, it extracts dosage from the drug names and fills the NaN values in the dosage column.
    """

    match = re.search(dosage_pattern, row["dosage2"])
    if match:
        return match.group()
    elif fill_nan and row["dosage2"] == "":
        match = re.search(fill_pattern, row["drugname"])
        if match:
            return match.group(1)

    # Return original value if none of the conditions are met
    return row["dosage2"]


# function to categorize medication frequencies
def categorize_freq(freq):
    q1h = [
        "Q1H",
        "q1hr",
        "Q1HRSPRN",
        "Q1HRS",
        "H1",
        "Every 1 hour PRN",
        "Every 1 hour",
        "q 1 hour",
        "q 1 hour PRN",
        "Q1H PRN",
        "Q1HPRN",
        "Q1HP",
        "Q1H X2",
        "Q1H X3",
        "Q1H X4",
    ]
    q2h = [
        "Q2H",
        "q2hr",
        "Every 2 hours",
        "Every 2 hours PRN",
        "q 2 hour",
        "q 2 hour PRN",
        "Q2H PRN",
        "Q2H X2",
    ]
    q3h = ["Q3H", "q3hr", "Every 3 hours", "q 3 hour", "q 3 hour PRN", "Q3H PRN"]
    q4h = [
        "Q4H",
        "q4hr",
        "Every 4 hours",
        "q 4 hour",
        "q 4 hour PRN",
        "Q4H PRN",
        "Q4HRS",
        "Q4HR",
        "Q4H SCH",
        "Q4HPRN",
        "Q4HRSPRN",
        "Q4HRS",
        "Q4H (int)",
        "Q4H X2",
        "Resp q 4 hour",
        "4x Daily",
        "4x Daily PRN",
        "QID",
        "QID PRN",
        "QID AC",
        "QIDACHS",
        "qid8,0800,1200,1800,2200 INDEF",
        "Q4H WA",
        "Resp q 4 hour",
        "prn4 INDEF",
    ]
    q6h = [
        "Q6H",
        "q6hr",
        "Every 6 hours",
        "q 6 hour",
        "q 6 hour PRN",
        "Q6H PRN",
        "Q6H (int)",
        "Q6H (int) X2",
        "Q6H SCH",
        "Q6HPRN",
        "Q6HR",
        "Q6HRSPRN",
        "Q6H X2",
        "Q6H X4",
        "Q6",
        "q 6 hour",
        "Resp q 6 hour",
        "Every 6 hours scheduled",
        "Every 6 hours PRN",
        "6H",
        "H6",
        "Q6HP",
        "q6h,0000,0600,1200,1800 INDEF",
        "Before meals & nightly",
        "QID",
        "QIDACHS",
        "QID PRN",
        "QID AC",
        "QID before meals and nightly",
        "qid8,0800,1200,1800,2200 INDEF",
        "Resp q 6 hour",
        "4 Times Daily",
        "4 times per day",
        "4x Daily AC & HS",
        "4x Daily PRN",
        "4x Daily",
        "Q6H X4",
        "Q6H X2",
        "prn6 INDEF",
    ]
    q8h = [
        "Q8H",
        "Q8H (int)",
        "q8hr",
        "Every 8 hours",
        "Every 8 hours PRN",
        "q 8 hour",
        "q 8 hour PRN",
        "Q8H PRN",
        "Q8H SCH",
        "Q8HPRN",
        "Q8HR",
        "Q8H X2",
        "Q8H X3",
        "Q8",
        "q 8 hour",
        "Every 8 hours scheduled",
        "8H",
        "H8",
        "Q8HRS",
        "q8hr (interval)",
        "TID AC",
        "TIDP",
        "TID Meals",
        "TID W/MEALS",
        "TID (09 14 21)",
        "TID with meals",
        "tid,0800,1600,2200 INDEF",
        "tid8,0800,1200,1800 INDEF",
        "q8h ,0600,1400,2200 INDEF",
        "q8hprn: for  dose(s)",
        "TID PC",
        "TID",
        "TID WC",
        "TID PRN",
        "TIDAC",
        "TID15AC",
        "TIDMEAL",
        "TID MEALS",
        "prntid INDEF",
        "X3",
        "3 times daily PRN",
        "Daily X3",
        "3 times daily",
        "DAILY X3",
        "3xDaily",
        "Q8H X2",
        "Q8H X3",
        "Q8H X15",
        "TID X3",
        "WITH MEALS",
        "prn8 INDEF",
    ]
    q12h = [
        "Q12H",
        "q12hr",
        "Every 12 hours",
        "q 12 hour",
        "q 12 hour PRN",
        "Q12H PRN",
        "Q12H SCH",
        "Q12HR",
        "Q12",
        "q 12 hour",
        "Every 12 hours scheduled",
        "12H",
        "Q12HR(09 21) Routine",
        "q 12 hr (BID)",
        "Q12H (int)",
        "Q12H X10",
        "q12hr (interval)",
        "BID",
        "BIDP",
        "BID AC",
        "BIDTX",
        "BIDAC",
        "BIDMEAL",
        "q 12 hour (BID)",
        "BID Meals",
        "BID,TWICE A DAY",
        "BID (06 18)",
        "BID WC",
        "BID PRN",
        "BIDWM",
        "BID0600",
        "BID M/E",
        "BID M/N",
        "BIDMEALS",
        "BID (09 17)",
        "BID With Meals",
        "BID Before Meals",
        "bid8,0800,1800 INDEF",
        "bida,0800,2200 INDEF",
        "bidc,0800,2000 INDEF",
        "bid:  0900,2100 for  dose(s)",
        "prnbid INDEF",
        "BIDPRN",
        "BID (NON-STD)",
        "0800,1700",
        "Resp q 12 hour",
        "2 times daily after meals",
        "2 times daily",
        "2 Times Daily",
        "2 times daily with meals",
        "2 times per day",
        "Daily X2",
        "twice a day",
        "0900,2100",
        "BID X4",
        "BID X2",
        "2xDaily",
        "PRN X2",
        "BID X10",
        "AC+HS",
        "Q12H X2",
        "AC/HS",
        "X2",
        "",
    ]
    q24h = [
        "Q24H",
        "q24hr",
        "Every 24 hours",
        "AC Daily Breakfast",
        "q 24 hour",
        "q 24 h",
        "q 24 hour (daily)",
        "Daily",
        "daily",
        "DAILY",
        "DAILYB",
        "DAILYACB",
        "DAILY AC",
        "DAILY PC",
        "DAILY PM",
        "Daily with dinner",
        "Daily with breakfast",
        "Daily SUPPER",
        "Daily BREAKFAST",
        "DAILY BREAKFAST",
        "Daily BEDTIME",
        "Daily LATE",
        "Daily EARLY",
        "DAILY (0900)",
        "DAILY (0600)",
        "DAILY (1700)",
        "DAILY,DAILY",
        "DAILY (0900) Routine",
        "Daily PRN",
        "DAILY PRN",
        "Daily X1",
        "Daily X2",
        "Daily X3",
        "daily9:  0900 for  dose(s)",
        "1xDaily",
        "1xDaily ac",
        "1xDaily hs",
        "QDAY",
        "Q breakfast",
        "QAC breakfast",
        "Q Evening",
        "qDay",
        "Q24HR",
        "QDAY",
        "qDay",
        "QHS",
        "Q24H SCH",
        "Q0600",
        "Q1700",
        "q 24 hr",
        "q 24 hr (interval)",
        "q24hr (interval)",
        "every8hr",
        "Every 24 hours",
        "Every morning before breakfast",
        "Daily",
        "DAILY",
        "DAILYPRN",
        "Once a day",
        "1x Daily",
        "Once daily",
        "QD",
        "qd",
        "qd8,0800 INDEF",
        "daily",
        "0900",
        "2100",
        "0600",
        "Every evening",
        "w Brkfst",
        "Nightly",
        "Nightly PRN",
        "BEDTIME",
        "NIGHTLY",
        "1xDaily hs",
        "H24",
        "Q24H X5",
        "QAM AC",
        "QAM",
        "QPM",
        "QHS (2100)",
        "QHSPRN",
        "QHS PRN",
        "qHS",
        "AMAC",
        "DAILY D30",
        "ACHS",
        "prnhs INDEF",
        "qd22,2200 INDEF",
        "prnqd INDEF",
        "qd8,0800 INDEF",
        "CORRECTIONAL DOSING",
        "SLIDING SCALE",
    ]
    once = [
        "1XONLY",
        "Once X1",
        "ONCE X1",
        "ONCE",
        "Once",
        "ONE",
        "ONE 1",
        "ONETIME",
        "ONETIME 0 SEC",
        "ONETIMEPRN",
        "ONE TIME",
        "ONE TIME One Time",
        "ONE TIME One Time Stat",
        "One Time Stat",
        "One Time",
        "Onetime",
        "ONE TIME X1",
        "Once as needed",
        "Once as needed X1",
        "Once PRN",
        "Once PRN X1",
        "ONCE PRN X1",
        "Post-Proc Once PRN X1",
        "POSTOP",
        "Pre-Proc Once X1",
        "Intra-Proc Once X1",
        "Intra-Proc Once",
        "Pre-Proc Once",
        "PREOP",
        "once,1000 INDEF",
        "once,1200 INDEF",
        "ONCE: for 1 dose(s)",
        "1X",
        "X1",
        "ONCERX",
        "X1 M419",
        "X1 M1079",
        "X1ED M14",
        "X1 M899",
        "X1 M839",
        "X1 M659",
        "X1 M599",
        "X1 M1019",
        "X1 M359",
        "X1 M779",
        "X1 M959",
        "X1 M719",
        "X1 M539",
        "X1 M1139",
        "1X",
        "AC",
        "HS",
        "At bedtime",
        "ONCALL",
        "On Call",
        "ONCALL X1",
        "ONCALL X2",
        "ONCALL X5",
        "ONCALL X10",
        "ONCALL X99",
        "On Call to Procedure",
        "ONDEM",
        "HS PRN",
        "PRN",
        "prn: for  dose(s)",
        "PRN X1",
        "PRN X999",
        "PYX1TIME",
        "Give in Surgery",
        "PreOP",
        "See Admin Instructions PRN",
        "As needed",
        "0730",
        "1700",
        "TPN2100",
        "TPN1800",
        "Continuous TPN",
        "TPN Continuous",
        "Continuous",
        "CONTINUOUS",
        "CONT",
        "continuous INDEF",
        "Continuous",
        "Pre-Proc Continuous",
        "cont: for  dose(s)",
        "Titrated",
        "Titrated/See admin instructions",
        "TITRATE",
        "Titrate",
        "Titrate: for  dose(s)",
        "INFUSE",
        "Continuous PRN",
        "CoNtInUos",
        "prn INDEF",
        "Intra-Proc Once X1",
        "OTO",
        "OTCOND",
        "OT",
        "To OR",
        "PACU USE ONLY X1",
        "DRIP",
        "NOW: for 1 dose(s)",
    ]
    """
    Miscellaneous frequencies: 
        Q5M,Q5MIN,NOW,STAT,AS DIRECTED,as directed,User Specified,See Admin Instructions,
        Weekly,PER PROTOCOL,See Admin Notes,ZPYXISVEND,Pyxis,PROTOCOL,0,10,AS-DIR,PRNP,
        MWF,.STK-MED,Q30MIN,Q15 Min PRN,Q5M,Q15MINPRN,.STK-MED 1,UD,Q72H,.DISP,UDP,RQ6,
        RSPQ4H,QDP,Q2DAYS,Q48H,q 48 hour,Every Other Day
    """
    if freq:
        freq = freq.strip()
    if freq in q1h:
        return "Q1H"
    elif freq in q2h:
        return "Q2H"
    elif freq in q3h:
        return "Q3H"
    elif freq in q4h:
        return "Q4H"
    elif freq in q6h:
        return "Q6H"
    elif freq in q8h:
        return "Q8H"
    elif freq in q12h:
        return "Q12H"
    elif freq in q24h:
        return "Q24H"
    elif freq in once:
        return "Once"
    else:
        return "Misc"


# function to categorize medication administration routes
def categorize_route(route):
    iv_routes = [
        "IV",
        "Intravenous",
        "INTRAVENOUS",
        "CENTRAL IV",
        "IV PUSH",
        "IVP",
        "IVPB",
        "IV CONT",
        "IVDRIP",
        "IV (injection)",
        "IV - continuous infusion (injection)",
        "PERIPH IV",
        "IV (intravenous)",
        "IV - brief infusion (injection)",
        "IV Sedation",
        "IntraVENOUS",
        "INTRAVENOU",
        "INTRAVEN",
        "COSIG IV",
        "IV Push",
        "IV - continuous infusion (intravenous)",
    ]
    sc_routes = [
        "SC",
        "SQ",
        "SubQ",
        "Subcutaneous",
        "SUBCUTAN",
        "SUBCUT/IM",
        "SUBCUT",
        "SUBQ",
        "SUB-Q",
        "Subcut",
        "Subcutan",
        "Subcutaneous (Subcutane)",
        "Subcutaneous",
        "Subcutaneous (injection)",
    ]
    im_routes = [
        "IM",
        "IntraMUSCULAR",
        "Intramuscular",
        "INTRAMUSC",
        "INTRAMUSCU",
        "INTRA-MUSCULAR",
        "IM Deltoid",
    ]
    oral_routes = [
        "PO",
        "Oral",
        "ORAL",
        "PO (oral)",
        "ORAL/TUBE",
        "ORAL GASTR",
        "PO/NG",
        "PO or OG",
        "PO or NG",
        "CHEW",
    ]
    tube_routes = [
        "NG",
        "PER G TUBE",
        "GASTRIC TU",
        "Oral Gastric Tube",
        "Tube",
        "PER NG TUBE",
        "Nasogastric Tube",
        "Per G Tube",
        "NGT",
        "Per NG tube",
        "GTUBE",
        "Feeding Tube",
        "Central Line",
        "G-TUBE",
        "Dobhoff Tube",
        "GT",
        "GTT",
        "Gastric Tube (PEG)",
        "NG Tube",
        "OG",
        "NASOGASTRI",
        "PegTube",
        "PEG-TUBE",
        "NGTUBE",
        "G Tube",
        "JTUBE",
        "PEGTUBE",
        "PEG TUBE",
        "NG-TUBE",
        "PER J TUBE",
        "NG-tube",
        "Gtub",
        "PEG-tube",
        "PEG",
        "J TUBE",
        "Jejunostomy Tube",
        "NG or OG",
    ]

    if route:
        route = route.strip()
    if route in iv_routes:
        return "IV"
    elif route in sc_routes:
        return "SC"
    elif route in im_routes:
        return "IM"
    elif route in oral_routes:
        return "PO"
    elif route in tube_routes:
        return "Tube"
    else:
        return "Misc"


# function to extract the numerical value from text
def extract_number(text):
    match = re.search(r"-?\d*\.?\d+", text)
    return np.round(np.float64(match.group()), 2) if match else np.nan
